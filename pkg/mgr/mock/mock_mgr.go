// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/mgr/interface.go

// Package mock_mgr is a generated GoMock package.
package mock_mgr

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	pipeline "github.com/packagrio/go-common/pipeline"
	config "github.com/packagrio/publishr/pkg/config"
)

// MockInterface is a mock of Interface interface.
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface.
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance.
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// Init mocks base method.
func (m *MockInterface) Init(pipelineData *pipeline.Data, myconfig config.Interface, client *http.Client) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", pipelineData, myconfig, client)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init.
func (mr *MockInterfaceMockRecorder) Init(pipelineData, myconfig, client interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockInterface)(nil).Init), pipelineData, myconfig, client)
}

// MgrDistStep mocks base method.
func (m *MockInterface) MgrDistStep(nextMetadata interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MgrDistStep", nextMetadata)
	ret0, _ := ret[0].(error)
	return ret0
}

// MgrDistStep indicates an expected call of MgrDistStep.
func (mr *MockInterfaceMockRecorder) MgrDistStep(nextMetadata interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MgrDistStep", reflect.TypeOf((*MockInterface)(nil).MgrDistStep), nextMetadata)
}

// MgrValidateTools mocks base method.
func (m *MockInterface) MgrValidateTools() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MgrValidateTools")
	ret0, _ := ret[0].(error)
	return ret0
}

// MgrValidateTools indicates an expected call of MgrValidateTools.
func (mr *MockInterfaceMockRecorder) MgrValidateTools() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MgrValidateTools", reflect.TypeOf((*MockInterface)(nil).MgrValidateTools))
}
